stages:
    - build
    - d-build
    - deploy

maven-build:
    stage: build
    image: maven:latest
    script:
        - mvn clean compile
        - mvn package -B -DskipTests=true
    artifacts:
        paths:
            - target/*.jar

docker-build:
    stage: d-build
    image: docker:latest
    services:
        - docker:dind
    script:
        - docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
        - docker build -t $DOCKERHUB_USERNAME/$DOCKERHUB_IMAGE .
        - docker push $DOCKERHUB_USERNAME/$DOCKERHUB_IMAGE
        - docker logout
        
aws-prod:
    stage: deploy
    image: docker:latest
    services:
        - docker:dind
    script:
        - if ["$(docker -H $SPRING_CLUSTER ps)"]; then docker -H $SPRING_CLUSTER stop $(docker ps -q); fi
        - if ["$(docker -H $SPRING_CLUSTER ps -a)"]; then docker -H $SPRING_CLUSTER container prune -f; fi
        - if ["$(docker -H $SPRING_CLUSTER images)"]; then docker -H $SPRING_CLUSTER image prune -a -f; fi
        - docker -H $SPRING_CLUSTER run --network dbconnection -p $PHOST:"$PGUEST" -e DATABASE_URI="$DATABASE_URI" -e DBUSER=$DBUSER -e DBPASSWORD=$DBPASSWORD -e DBNAME=$DBNAME -d $DOCKERHUB_USERNAME/$DOCKERHUB_IMAGE
    #rules:
    #    - when: manual